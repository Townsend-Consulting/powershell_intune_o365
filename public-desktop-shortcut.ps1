# Title: Create Public Desktop Shortcuts w/custom Icon
# Author: Ben Townsend
# Last Update: 9/21/2023

#This script creates a desktop shortcut with a custom ico generated by using base64 embedded string. 
#To created base64 string for ico file, upload ico file here:https://base64.guru/converter/encode/image/ico
param (
	[system.string]$ShortcutName     = "Example",
	[system.string]$ShortcutUrl      = "https://www.example.com",
    [system.string]$IconBase64       = "--replace with base--",
	[system.string]$Desktop          = [Environment]::GetFolderPath("CommonDesktopDirectory"),
    [system.string]$IntuneProgramDir = "c:\intune",
    [System.String]$TempIcon         = "$IntuneProgramDir\$ShortcutName.ico",
	[bool]$ShortcutOnDesktop         = $True
)

# Define the path for the log file
$logPath = "$IntuneProgramDir\script_log.txt"

# Ensure the directory exists
if (-not (Test-Path -Path $IntuneProgramDir)) {
    try {
        New-Item -ItemType Directory -Force -Path $IntuneProgramDir
        Add-Content -Path $logPath -Value "$(Get-Date) - Directory c:hh-intune checked/created."
    } catch {
        Write-Error "Failed to create directory C:\hh-intune. Error details: $_"
        exit 1
    }
}

#Test if icon is currently present, if so delete it so we can update it
$IconPresent = Get-ChildItem -Path $Desktop | Where-Object {$_.Name -eq "$ShortcutName.lnk"}
If ($IconPresent)
{
      Add-Content -Path $logPath -Value "$(Get-Date) - $ShortcutName.lnk shortcut removed."  
      Remove-Item $IconPresent.VersionInfo.FileName -Force -Confirm:$False
}

#Test if previous/alternate version is currently present, if so delete the duplicate
$IconPresent = Get-ChildItem -Path $Desktop | Where-Object {$_.Name -eq "$ShortcutName.url"}
If ($IconPresent)
{
      Add-Content -Path $logPath -Value "$(Get-Date) - $ShortcutName.url old shortcut deleted."  
      Remove-Item $IconPresent.VersionInfo.FileName -Force -Confirm:$False
}

#Create Icon
if ($ShortcutOnDesktop)
    {
        [byte[]]$Bytes = [convert]::FromBase64String($IconBase64)
        [System.IO.File]::WriteAllBytes($TempIcon,$Bytes)
        $shortcutFile = "$Desktop\$ShortcutName.lnk"
        $WScriptShell = New-Object -ComObject WScript.Shell
        $shortcut = $WScriptShell.CreateShortcut($shortcutFile)
        $shortcut.TargetPath = $ShortcutUrl
        $shortcut.IconLocation = $TempIcon
        $shortcut.Save()
        Add-Content -Path $logPath -Value "$(Get-Date) - $ShortcutName shortcut created."  
    }